@model DiamondAssessmentSystem.Application.DTO.BlogDto
@{
    ViewData["Title"] = "Edit Blog";
}

<div class="max-w-3xl mx-auto px-4 py-12">
    <!-- Header -->
    <div class="mb-10 text-center">
        <h1 class="text-4xl font-bold text-gray-900 mb-2">✏️ Edit Blog Post</h1>
        <p class="text-gray-600 text-sm">Update the blog's content, title, or image. Make your post shine.</p>
    </div>

    <!-- Form -->
    <form asp-action="Edit" method="post" class="bg-white rounded-2xl shadow-xl p-8 space-y-8 border border-gray-200">
        <div asp-validation-summary="ModelOnly" class="text-red-500 text-sm"></div>

        <input type="hidden" asp-for="BlogId" />

        <!-- Title -->
        <div>
            <label asp-for="Title" class="block font-semibold text-gray-700 mb-1">Title</label>
            <input asp-for="Title" class="w-full border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-200" />
            <span asp-validation-for="Title" class="text-red-500 text-sm"></span>
        </div>

        <!-- ImageUrl -->
        <div>
            <label asp-for="ImageUrl" class="block font-semibold text-gray-700 mb-1">Image URL</label>
            <input asp-for="ImageUrl" id="imageUrl" class="w-full border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-200" />
            <span asp-validation-for="ImageUrl" class="text-red-500 text-sm"></span>

            <div class="mt-4">
                <label class="block text-gray-600 text-sm mb-1">Preview:</label>
                <img id="imagePreview" src="@Model.ImageUrl" alt="Image preview" class="rounded-lg shadow-sm max-h-64 w-full object-cover border border-gray-100" />
            </div>
        </div>

        <!-- Content -->
        <div>
            <label asp-for="Content" class="block font-semibold text-gray-700 mb-1">Content</label>
            <textarea asp-for="Content" rows="8" class="w-full border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-200"></textarea>
            <span asp-validation-for="Content" class="text-red-500 text-sm"></span>
        </div>

        <!-- Blog Type -->
        <div>
            <label asp-for="BlogType" class="block font-semibold text-gray-700 mb-1">Blog Type</label>
            <select asp-for="BlogType" class="w-full border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-200">
                <option value="">-- Select Blog Type --</option>
                @foreach (var type in ViewBag.BlogTypeOptions as List<string>)
                {
                    <option value="@type" selected="@(Model.BlogType == type ? "selected" : null)">@type</option>
                }
            </select>
            <span asp-validation-for="BlogType" class="text-red-500 text-sm"></span>
        </div>

        <!-- Actions -->
        <div class="flex items-center justify-between">
            <button type="submit" class="bg-green-600 text-white px-6 py-2.5 rounded-lg hover:bg-green-700 transition font-semibold">💾 Save Changes</button>
            <a asp-action="Index" class="text-gray-500 hover:text-blue-600 text-sm">← Back to List</a>
        </div>
    </form>

    <!-- Popup Modal -->
    <div class="modal fade" id="popupModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content rounded-xl shadow">
                <div class="modal-header @(ViewBag.PopupType == "success" ? "bg-success" : "bg-danger") text-white">
                    <h5 class="modal-title">Notification</h5>
                </div>
                <div class="modal-body text-center text-gray-700">
                    @Html.Raw(ViewBag.PopupMessage)
                </div>
                <div class="modal-footer justify-content-center space-x-2">
                    <a href="@Url.Action("Index")" class="btn btn-success">Back to Blog List</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Stay Here</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const imgInput = document.getElementById('imageUrl');
        const preview = document.getElementById('imagePreview');
        imgInput.addEventListener('input', () => {
            preview.src = imgInput.value;
        });

        @if (!string.IsNullOrEmpty(ViewBag.PopupMessage))
        {
                <text>
                    const popup = new bootstrap.Modal(document.getElementById('popupModal'));
                    popup.show();
                </text>
        }
    </script>
}
