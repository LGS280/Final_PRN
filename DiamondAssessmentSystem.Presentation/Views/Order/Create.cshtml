@using Newtonsoft.Json
@model DiamondAssessmentSystem.Application.DTO.OrderCreateCombineDto
@{
    ViewData["Title"] = "Payment";
    var requestOptions = ViewBag.RequestOptions as List<SelectListItem>;
    var serviceMapJson = ViewBag.ServiceMapJson;
}

<div class="max-w-3xl mx-auto py-12 px-4">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">🧾 Payment</h1>

    <form asp-action="Create" method="post" class="space-y-6 bg-white p-6 rounded-xl shadow-md border">
        <div asp-validation-summary="All" class="text-red-500 text-sm"></div>

        <div>
            <label asp-for="PaymentInfo.RequestId" class="block font-semibold text-gray-700">Select Request</label>
            <select asp-for="PaymentInfo.RequestId" id="PaymentInfo_RequestId"
                    class="w-full mt-1 border-gray-300 rounded-md shadow-sm">
                <option value="">-- Choose Request --</option>
                @foreach (var req in requestOptions)
                {
                    <option value="@req.Value">@req.Text</option>
                }
            </select>
            <span asp-validation-for="PaymentInfo.RequestId" class="text-red-500 text-sm"></span>
        </div>

        <div id="RequestDetailPanel" class="bg-gray-50 p-4 rounded-lg border border-gray-300 mt-4 hidden">
            <h2 class="text-xl font-semibold text-gray-800 mb-2">📄 Request & Service Details</h2>
            <dl class="grid grid-cols-2 gap-4 text-sm text-gray-700">
                <div>
                    <dt class="font-medium">Request Type</dt>
                    <dd id="Detail_RequestType">—</dd>
                </div>
                <div>
                    <dt class="font-medium">Request Date</dt>
                    <dd id="Detail_RequestDate">—</dd>
                </div>
                <div>
                    <dt class="font-medium">Request Status</dt>
                    <dd id="Detail_Status">—</dd>
                </div>
                <div>
                    <dt class="font-medium">Service Type</dt>
                    <dd id="Detail_ServiceType">—</dd>
                </div>
                <div>
                    <dt class="font-medium">Duration (days)</dt>
                    <dd id="Detail_Duration">—</dd>
                </div>
                <div>
                    <dt class="font-medium">Price</dt>
                    <dd id="Detail_Price">—</dd>
                </div>
                <div class="col-span-2">
                    <dt class="font-medium">Description</dt>
                    <dd id="Detail_Description" class="italic">—</dd>
                </div>
                <div class="col-span-2">
                    <dt class="font-medium">Employee</dt>
                    <dd id="Detail_EmployeeName">—</dd>
                </div>
            </dl>
        </div>

        @* <div>
            <label asp-for="OrderData.ServiceId" class="block font-semibold text-gray-700">Service ID</label>
            <input asp-for="OrderData.ServiceId" id="OrderData_ServiceId" class="w-full mt-1 bg-gray-100 border-gray-300 rounded-md shadow-sm" readonly />
            <span asp-validation-for="OrderData.ServiceId" class="text-red-500 text-sm"></span>
        </div> *@

        @* <div>
            <label asp-for="OrderData.TotalPrice" class="block font-semibold text-gray-700">Total Price</label>
            <input asp-for="OrderData.TotalPrice" id="OrderData_TotalPrice" class="w-full mt-1 bg-gray-100 border-gray-300 rounded-md shadow-sm" readonly />
            <span asp-validation-for="OrderData.TotalPrice" class="text-red-500 text-sm"></span>
        </div> *@

        <input type="hidden" asp-for="OrderData.ServiceId" id="OrderData_ServiceId" />
        <input type="hidden" asp-for="OrderData.TotalPrice" id="OrderData_TotalPrice" />

        <div>
            <label asp-for="PaymentInfo.PaymentType" class="block font-semibold text-gray-700">Payment Type</label>
            <select asp-for="PaymentInfo.PaymentType" id="PaymentInfo_PaymentType"
                    class="w-full mt-1 border-gray-300 rounded-md shadow-sm">
                <option value="">-- Choose Payment Type --</option>
                <option value="Online">Online</option>
                <option value="Offline">Offline</option>
            </select>
            <span asp-validation-for="PaymentInfo.PaymentType" class="text-red-500 text-sm"></span>
        </div>

        <div class="flex justify-between">
            <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition">💳 Pay</button>
            <a asp-action="MyOrder" class="text-sm text-blue-600 hover:underline">← Back</a>
        </div>
    </form>
    @if (TempData["ProfileIncomplete"] != null)
{
    <div class="modal fade show d-block" tabindex="-1" style="background: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content shadow">
                <div class="modal-header bg-warning">
                    <h5 class="modal-title text-dark">Incomplete Profile</h5>
                </div>
                <div class="modal-body text-dark">
                    <p>Vui lòng cập nhật đầy đủ hồ sơ cá nhân trước khi thực hiện thanh toán.</p>
                    <div class="d-flex justify-content-end gap-2 mt-3">
                        <a href="/Customer/EditCustomerVer1" class="btn btn-primary">Cập nhật hồ sơ</a>
                        <button type="button" class="btn btn-outline-secondary" onclick="closeModal()">Ở lại</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>

    <script>
        function closeModal() {
            document.querySelector('.modal')?.remove();
            document.querySelector('.modal-backdrop')?.remove();
        }
    </script>
}
</div>

@section Scripts {
    <script>
            const serviceMap = @Html.Raw(serviceMapJson);
            const customer = @Html.Raw(JsonConvert.SerializeObject(ViewBag.CustomerInfo));

            function formatDate(dateStr) {
                return new Date(dateStr).toLocaleDateString();
            }

            function onRequestChange() {
                const selectedId = document.getElementById("PaymentInfo_RequestId").value;
                const service = serviceMap[selectedId];

                document.getElementById("OrderData_ServiceId").value = service?.serviceId || "";
                document.getElementById("OrderData_TotalPrice").value = service?.price || "";

                if (service) {
                    document.getElementById("Detail_RequestType").innerText = service.requestType || "—";
                    document.getElementById("Detail_RequestDate").innerText = formatDate(service.requestDate);
                    document.getElementById("Detail_Status").innerText = service.status || "—";
                    document.getElementById("Detail_ServiceType").innerText = service.serviceType || "—";
                    document.getElementById("Detail_Duration").innerText = service.duration || "—";
                    document.getElementById("Detail_Price").innerText = service.price || "—";
                    document.getElementById("Detail_Description").innerText = service.description || "—";
                    document.getElementById("Detail_EmployeeName").innerText = service.employeeName || "—";
                    document.getElementById("RequestDetailPanel").classList.remove("hidden");
                } else {
                    document.getElementById("RequestDetailPanel").classList.add("hidden");
                }
            }

            function isEmpty(value) {
                return !value || value.trim().length === 0;
            }

            function hasMissingFields(cus) {
                return isEmpty(cus.firstName) ||
                       isEmpty(cus.lastName) ||
                       isEmpty(cus.gender) ||
                       isEmpty(cus.phone) ||
                       isEmpty(cus.email) ||
                       isEmpty(cus.idCard) ||
                       isEmpty(cus.address) ||
                       isEmpty(cus.unitName) ||
                       isEmpty(cus.taxCode);
            }

            function showIncompleteProfileModal() {
                const modalHtml = `
        <div class="modal fade show d-block" tabindex="-1" style="background: rgba(0,0,0,0.5);">
          <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content shadow">
              <div class="modal-header bg-warning">
                <h5 class="modal-title text-dark">Incomplete Profile</h5>
              </div>
              <div class="modal-body text-dark">
                <p>Vui lòng cập nhật đầy đủ hồ sơ cá nhân trước khi thực hiện thanh toán.</p>
                <div class="d-flex justify-content-end gap-2 mt-3">
                  <a href="/Customer/EditCustomerVer1" class="btn btn-primary">Cập nhật hồ sơ</a>
                  <button type="button" class="btn btn-outline-secondary" onclick="closeModal()">Ở lại</button>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="modal-backdrop fade show"></div>`;
                document.body.insertAdjacentHTML("beforeend", modalHtml);
            }

            function closeModal() {
                document.querySelector(".modal")?.remove();
                document.querySelector(".modal-backdrop")?.remove();
            }

            document.addEventListener("DOMContentLoaded", () => {
                const select = document.getElementById("PaymentInfo_RequestId");
                if (select && select.value) {
                    onRequestChange();
                }
                select?.addEventListener("change", onRequestChange);

                const form = document.querySelector("form");
                form?.addEventListener("submit", function (e) {
                    if (hasMissingFields(customer)) {
                        e.preventDefault();
                        showIncompleteProfileModal();
                    }
                });
            });
    </script>
}
