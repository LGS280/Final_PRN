@model DiamondAssessmentSystem.Application.DTO.RequestCreateDto
@{
    ViewData["Title"] = "Create Request";
    var serviceOptions = ViewBag.Services as List<SelectListItem>;
    var categories = ViewBag.Categories as List<string>;
    var statuses = ViewBag.Statuses as List<string>;
}

<div class="max-w-3xl mx-auto py-10 px-6">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">📄 Create Request</h1>

    <form asp-action="Create" method="post" class="space-y-6 bg-white p-6 rounded-xl shadow-md border">
        <div asp-validation-summary="All" class="text-red-500 text-sm"></div>

        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-2">
            <div>
                <label class="font-semibold text-gray-700">Category</label>
                <select id="categoryFilter" class="w-full mt-1 border-gray-300 rounded-md">
                    <option value="">All</option>
                    @foreach (var cat in categories)
                    {
                        <option value="@cat">@cat</option>
                    }
                </select>
            </div>
            <div>
                <label class="font-semibold text-gray-700">Sort By Price</label>
                <select id="priceSort" class="w-full mt-1 border-gray-300 rounded-md">
                    <option value="">None</option>
                    <option value="asc">Price ↑</option>
                    <option value="desc">Price ↓</option>
                </select>
            </div>
            <div>
                <label class="font-semibold text-gray-700">Status</label>
                <select id="statusFilter" class="w-full mt-1 border-gray-300 rounded-md">
                    <option value="">All</option>
                    @foreach (var s in statuses)
                    {
                        <option value="@s">@s</option>
                    }
                </select>
            </div>
        </div>

        <div>
            <label asp-for="ServiceId" class="font-semibold text-gray-700">Service</label>
            <select asp-for="ServiceId" class="w-full mt-1 border-gray-300 rounded-md shadow-sm" id="serviceSelect">
                <option value="">-- Select Service --</option>
            </select>
            <span asp-validation-for="ServiceId" class="text-red-500 text-sm"></span>
        </div>

        <div id="serviceDetails" class="bg-gray-50 border rounded-md p-4 mt-4 hidden">
            <p><strong>Type:</strong> <span id="serviceType"></span></p>
            <p><strong>Price:</strong> <span id="servicePrice"></span></p>
            <p><strong>Duration:</strong> <span id="serviceDuration"></span> minutes</p>
            <p><strong>Description:</strong> <span id="serviceDescription"></span></p>
        </div>

        <div>
            <label asp-for="RequestType" class="font-semibold text-gray-700">Request Type</label>
            <select asp-for="RequestType" class="w-full mt-1 border-gray-300 rounded-md shadow-sm">
                <option value="">-- Select Type --</option>
                <option>Normal</option>
                <option>Urgent</option>
                <option>VIP</option>
            </select>
            <span asp-validation-for="RequestType" class="text-red-500 text-sm"></span>
        </div>

        <div class="flex justify-between">
            <button type="submit" name="action" value="Submit" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">📤 Submit</button>
            <button type="submit" name="action" value="Draft" class="bg-gray-300 text-gray-800 px-4 py-2 rounded-lg hover:bg-gray-400">💾 Save as Draft</button>
        </div>
    </form>

    <div class="mt-4">
        <a asp-action="My" class="text-sm text-blue-600 hover:underline">← Back to My Requests</a>
    </div>

    <!-- Popup Modal -->
    <div class="modal fade" id="popupModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content rounded-xl shadow">
                <div class="modal-header @(ViewBag.PopupType == "success" ? "bg-success" : "bg-danger") text-white">
                    <h5 class="modal-title">Notification</h5>
                </div>
                <div class="modal-body text-center text-gray-700">
                    @Html.Raw(ViewBag.PopupMessage)
                </div>
                <div class="modal-footer justify-content-center space-x-2">
                    <a href="@Url.Action("My")" class="btn btn-success">Back to My Requests</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Stay Here</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const services = @Html.Raw(Json.Serialize(ViewBag.ServiceDetails));

        const serviceSelect = document.getElementById("serviceSelect");

        function renderServiceOptions(filtered) {
            serviceSelect.innerHTML = '<option value="">-- Select Service --</option>';
            for (const s of filtered) {
                const opt = document.createElement("option");
                opt.value = s.serviceId;
                opt.textContent = `${s.serviceType} - ${s.priceFormatted}`;
                serviceSelect.appendChild(opt);
            }
        }

        function updateServiceDetails(serviceId) {
            const s = services.find(x => x.serviceId == serviceId);
            const box = document.getElementById("serviceDetails");
            if (s) {
                document.getElementById("serviceType").innerText = s.serviceType;
                document.getElementById("servicePrice").innerText = s.priceFormatted;
                document.getElementById("serviceDuration").innerText = s.duration;
                document.getElementById("serviceDescription").innerText = s.description || "N/A";
                box.classList.remove("hidden");
            } else {
                box.classList.add("hidden");
            }
        }

        function filterAndSort() {
            const cat = document.getElementById("categoryFilter").value;
            const stat = document.getElementById("statusFilter").value;
            const sort = document.getElementById("priceSort").value;

            let filtered = [...services];
            if (cat) filtered = filtered.filter(s => s.category === cat);
            if (stat) filtered = filtered.filter(s => s.status === stat);
            if (sort === "asc") filtered.sort((a, b) => a.price - b.price);
            if (sort === "desc") filtered.sort((a, b) => b.price - a.price);

            renderServiceOptions(filtered);
        }

        ["categoryFilter", "statusFilter", "priceSort"].forEach(id => {
            document.getElementById(id).addEventListener("change", filterAndSort);
        });

        serviceSelect.addEventListener("change", () => {
            updateServiceDetails(serviceSelect.value);
        });

        filterAndSort();

        @if (!string.IsNullOrEmpty(ViewBag.PopupMessage))
        {
                <text>
                    const popup = new bootstrap.Modal(document.getElementById('popupModal'));
                    popup.show();
                </text>
        }
    </script>
}
