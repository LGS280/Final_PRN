@model DiamondAssessmentSystem.Application.DTO.RequestDto
@{
    ViewData["Title"] = "Request Details";
}
<div class="max-w-3xl mx-auto py-10 px-4">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">📑 Request Details</h1>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-100 text-red-700 p-4 mb-4 rounded-md">
            @TempData["ErrorMessage"]
        </div>
    }

    <div class="bg-white p-6 rounded-xl border shadow-sm space-y-4 text-sm text-gray-700">
        <div><strong>ID:</strong> @Model.RequestId</div>
        <div><strong>Form Type:</strong> @Model.FormType</div>
        <div><strong>Request Date:</strong> @Model.RequestDate.ToString("dd MMM yyyy")</div>
        <div><strong>Customer ID:</strong> @Model.CustomerId</div>
        <div><strong>Service ID:</strong> @Model.ServiceId</div>
        <div><strong>Request Type:</strong> @Model.RequestType</div>
        <div><strong>Employee ID:</strong> @Model.EmployeeId</div>
        <div><strong>Status:</strong> <span class="font-medium @GetStatusClass(Model.Status)">@Model.Status</span></div>
    </div>

    <div class="mt-6 flex justify-between">
        @if (Model.Status != "Pending")
        {
            <a asp-action="Edit" asp-route-id="@Model.RequestId" class="text-yellow-600 hover:underline">✏️ Edit</a>
        }

        @if (User.IsInRole("Customer"))
        {
            <a asp-action="My" class="text-blue-600 hover:underline">← Back to List</a>
        }
        else
        {
            <a asp-action="Index" class="text-blue-600 hover:underline">← Back to List</a>
        }
    </div>
</div>

@functions {
    string GetStatusClass(string? status)
    {
        return status switch
        {
            "Draft" => "text-yellow-600",
            "Pending" => "text-blue-600",
            "Completed" => "text-green-600",
            _ => "text-gray-500"
        };
    }
}
